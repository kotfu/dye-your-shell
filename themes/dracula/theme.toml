#
# definition of dracula theme

# theme file stuff to work out
# - how to declare a "whatever your terminal chooses" color
#     - fzf uses -1 for this
#     - rich uses "default"

# information heirarchy
# 'styles'
# 'domains'
#    domain - ie fzf
#       - domain_type
#    element - ie label
#    value - ie '$ff79c6'
#
# - domain can be the name of a  and element could be the color
# - domain could be the name of an environment variable, and element could be the value

# styles defined here use the syntax of the python rich library
name = "dracula"

[styles]
# these are from https://draculatheme.com/contribute
# we don't use the background color here, we just leave it to the terminal
# background color
background =  "#282a36"
foreground =  "#f8f8f2"

# styles for text and the highlighted line
# these are the only things fzf supports background colors for
text = "#f8f8f2 on default"
current_line =  "#f8f8f2 on #44475a"

# other colors from the dracula palette
comment =  "#6272a4"
cyan =  "#8be9fd"
green =  "#50fa7b"
orange =  "#ffb86c"
pink =  "#ff79c6"
purple =  "#bd93f9"
red =  "#ff5555"
yellow =  "#f1fa8c"


# default for the fzf command
[domain.fzf]
type = "fzf"

# attributes specific to fzf
varname = "FZF_DEFAULT_OPTS"
# the base color scheme from fzf to use
colorbase = "dark"


# command line options
# opt.--border = "single" --> --border='single'
# opt.--no-sort = true --> --no-sort
# opt."+i" = true --> +i
# opt.--no-sort = false does not add anything to the output
#opt.--border = "rounded"
opt.--pointer = "•"
#opt.--info = "hidden"
#opt.--no-sort = true
opt.--prompt = "> "
opt.--bind = "ctrl-k:kill-line,ctrl-j:ignore,ctrl-u:unix-line-discard"


# visual styles for each element

# the fzf module uses the bw base scheme, with turns all colors off
# if you don't specify a color here, it will draw in your terminal
# default foreground color

# fzf only supports a few background colors, and they are notated
# separately from the foreground
# so we map the following:
#   text -> fg and bg
#   current_line -> fg+ and bg+
#   preview -> preview-fg and preview-bg
# background colors on all other styles are ignored
#

# these styles are special because they set both foreground and background
style.text = "text"
style.current_line = "current_line"

# no special parsing for these styles, just use the fzf color name
# highlighted substrings
style.hl = "pink"
# highlighted substrings current line
style."hl+" = "pink"
style.label = "green"
style.border = "orange"
style.prompt = "green"
style.pointer = "cyan"
style.query = "pink"


[domain.fdirs]
# settings for aliases in fdirs, which uses fzf
# fdirs adds FZF_DEFAULT_OPTS and then FDIRS_FZF_OPTS to the command line
# before executing fzf, so you can override here anything from [domain.fzf]
type = "fzf"

# select the environment variable
varname = "FDIRS_FZF_OPTS"

# command line options
opt.--border = "rounded"
opt.--pointer = "•"
opt.--info = "hidden"
opt.--no-sort = true
opt.--prompt = "> "
opt."+i" = true
opt.--height = "~40%"
opt.--layout = "reverse-list"

# color styles
style.text = "text"
style.current_line = "current_line"
style.label = "green"
style.border = "orange"
style.pointer = "cyan"
style.prompt = "green"
style.query = "green"
# highlighted substrings
style.hl = "pink"
# highlighted substrings on current line
style."hl+" = "pink"
# hide the gutter
style.gutter = "default"


[domain.bash-control-r]
# fzf comes with an ancillary file that rebinds Control-R to a fzf powered
# history search. that script adds FZF_DEFAULT_OPTS to the command line before
# executing fzf. then it adds FZF_CTRL_R_OPTS to the command line. because
# fzf has a last-option-on-the-command-line-wins logic flow, it means
# that Control-R inherits anyt fzf options set in FZF_DEFAILT_OPTS
type = "fzf"

# select the environment variable
varname = "FZF_CTRL_R_OPTS"

# command line options
opt.--border = "rounded"
opt.--border-label = "command history"
opt.--border-label-pos = "3"

# styles
style.gutter = "default"

[domain.null]
# just here for testing
